/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UI;

import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn; //jtable column

/**
 *
 * @author asus
 */
public class MainAdmin extends javax.swing.JFrame {

    /**
     * Creates new form MainAdmin
     */
    ArrayList<String> cbCollection;
    String typeClient;

    com.ubaya.projectdistprog.RestaurantWS_Service serviceR = new com.ubaya.projectdistprog.RestaurantWS_Service();
    com.ubaya.projectdistprog.RestaurantWS portR = serviceR.getRestaurantWSPort();
    com.ubaya.projectdistprog.CustomerWS_Service serviceC = new com.ubaya.projectdistprog.CustomerWS_Service();
    com.ubaya.projectdistprog.CustomerWS portC = serviceC.getCustomerWSPort();
    com.ubaya.projectdistprog.BookingWS_Service serviceB = new com.ubaya.projectdistprog.BookingWS_Service();
    com.ubaya.projectdistprog.BookingWS portB = serviceB.getBookingWSPort();

    public MainAdmin() {
        initComponents();
        cbCari.removeAllItems();
        btnShowBooking.doClick();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableData = new javax.swing.JTable();
        btnShowCustomer = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        cbCari = new javax.swing.JComboBox<>();
        txtCari = new javax.swing.JTextField();
        btnShowRestaurant = new javax.swing.JButton();
        btnShowBooking = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtArea = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jLabel1.setText("Administrator");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 40, 180, -1));

        tableData.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tableData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tableData);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(355, 135, 650, 420));

        btnShowCustomer.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnShowCustomer.setText("Show Customer");
        btnShowCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowCustomerActionPerformed(evt);
            }
        });
        getContentPane().add(btnShowCustomer, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 220, 290, 33));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setText("Cari berdasarkan :");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 104, 130, 20));

        cbCari.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        cbCari.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        getContentPane().add(cbCari, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 100, 160, 30));

        txtCari.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCariKeyReleased(evt);
            }
        });
        getContentPane().add(txtCari, new org.netbeans.lib.awtextra.AbsoluteConstraints(355, 100, 650, 30));

        btnShowRestaurant.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnShowRestaurant.setText("Show Restaurant");
        btnShowRestaurant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowRestaurantActionPerformed(evt);
            }
        });
        getContentPane().add(btnShowRestaurant, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 180, 290, 33));

        btnShowBooking.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnShowBooking.setText("Show Booking");
        btnShowBooking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowBookingActionPerformed(evt);
            }
        });
        getContentPane().add(btnShowBooking, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 140, 290, 33));

        txtArea.setEditable(false);
        txtArea.setColumns(20);
        txtArea.setRows(5);
        jScrollPane2.setViewportView(txtArea);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 260, 290, 290));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/table2.png"))); // NOI18N
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void Refresh() {
        cbCari.removeAllItems();
        for (int i = 0; i < cbCollection.size(); i++) {
            cbCari.addItem(cbCollection.get(i));
        }
        txtCari.setText("");
    }

    private void Report() {
        try {
            txtArea.setText("");
            DefaultTableModel model = (DefaultTableModel) tableData.getModel();
            int col = model.getColumnCount();
            int row = model.getRowCount();
            int top = 3; //ranking

            txtArea.append("Report of: " + typeClient + "\n");
            txtArea.append("====================================================" + "\n");
            txtArea.append("Total " + typeClient + ": " + row + "\n");
            txtArea.append("====================================================" + "\n");

            if (typeClient.equals("booking")) {
                String hasil = portB.displayCountTanggalBooking();
                txtArea.append("Total Booking berdasarkan tahun dan bulan : \n");
                txtArea.append(hasil);
            } else if (typeClient.equals("restaurant")) {
                ArrayList<String> hasil = (ArrayList<String>) portB.displayCountBookingByRestoran();
                txtArea.append(top + " Restaurant dengan Booking terbanyak : \n");
                for (int i = 0; i < top; i++) {
                    String[] data = hasil.get(i).split("-");
                    txtArea.append("    ◻ (" + (i + 1) + ") " + data[0] + " dengan booking sebanyak " + data[1] + "\n");
                }
            } else if (typeClient.equals("customer")) {
                ArrayList<String> hasil = (ArrayList<String>) portB.displayCountBookingByCustomer();
                String[] first = hasil.get(0).split("-");
                txtArea.append(top + " Customer dengan Booking terbanyak : \n");
                for (int i = 0; i < top; i++) {
                    String[] data = hasil.get(i).split("-");
                    txtArea.append("    ◻ (" + (i + 1) + ") " + data[0] + " dengan booking sebanyak " + data[1] + "\n");
                }
            }
        } catch (Exception e) {
            System.out.println("Error di button show Report: " + e);
        }
    }

    private void RefreshTableBooking(ArrayList<String> hasil) {
        DefaultTableModel model = (DefaultTableModel) tableData.getModel();
        model.setRowCount(0);
        model.setColumnCount(0);

        String[] header = {"id", "nama customer", "nama restoran", "tanggal pemesanan", "Jam Pemesanan", "Keterangan", "jumlah meja dipesan"};
        cbCollection = new ArrayList<String>(Arrays.asList(header));

        for (int i = 0; i < header.length; i++) {
            model.addColumn(header[i]);
        }

        Object[] rowData = new Object[header.length];
        for (int i = 0; i < hasil.size(); i++) {
            String[] data = hasil.get(i).split(";");
            System.out.println(hasil.get(i));
            System.out.println();
            rowData[0] = data[0];
            rowData[1] = data[14];
            rowData[2] = data[7];
            rowData[3] = data[2];
            rowData[4] = data[4];
            rowData[5] = data[3];
            rowData[6] = data[1];

            model.addRow(rowData);
        }
    }

    private void RefreshTableRestaurant(ArrayList<String> hasil) {
        DefaultTableModel model = (DefaultTableModel) tableData.getModel();
        model.setRowCount(0);
        model.setColumnCount(0);

        String[] header = {"id", "nama pemilik", "nama restoran", "alamat", "nomor_telepon", "jam_buka", "jam_tutup", "username", "jumlah meja"};
        cbCollection = new ArrayList<String>(Arrays.asList(header));

        for (int i = 0; i < header.length; i++) {
            model.addColumn(header[i]);
        }

        Object[] rowData = new Object[header.length];
        for (int i = 0; i < hasil.size(); i++) {
            String[] data = hasil.get(i).split("-");
            rowData[0] = data[0];
            rowData[1] = data[1];
            rowData[2] = data[2];
            rowData[3] = data[3];
            rowData[4] = data[4];
            rowData[5] = data[6];
            rowData[6] = data[7];
            rowData[7] = data[5];
            rowData[8] = data[8];
            model.addRow(rowData);
        }
    }

    private void RefreshTableCustomer(ArrayList<String> hasil) {
        DefaultTableModel model = (DefaultTableModel) tableData.getModel();
        model.setRowCount(0);
        model.setColumnCount(0);
        String[] header = {"id", "Nama Customer", "Nomor Telepon", "Alamat", "Username"};
        cbCollection = new ArrayList<String>(Arrays.asList(header));

        for (int i = 0; i < header.length; i++) {
            model.addColumn(header[i]);
        }

        Object[] rowData = new Object[header.length];
        for (int i = 0; i < hasil.size(); i++) {
            String[] data = hasil.get(i).split("-");
            rowData[0] = data[0];
            rowData[1] = data[1];
            rowData[2] = data[2];
            rowData[3] = data[3];
            rowData[4] = data[4];
            model.addRow(rowData);
        }
    }

    private void txtCariKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCariKeyReleased
        // TODO add your handling code here:
        try {
            String selected = cbCari.getSelectedItem().toString().toLowerCase().replace(" ", "_");
            
            if(typeClient.equals("booking")){
                if(selected.equals("id")){selected = "b.id";}
                ArrayList<String> hasil = (ArrayList<String>) portB.displayBookingCari(selected, txtCari.getText());
                RefreshTableBooking(hasil);
            }
            else if(typeClient.equals("restaurant")){

                ArrayList<String> hasil = (ArrayList<String>) portR.displayResCari(selected, txtCari.getText());
                RefreshTableRestaurant(hasil);
            }
            else if(typeClient.equals("customer")){
                ArrayList<String> hasil = (ArrayList<String>) portC.displayCusCari(selected, txtCari.getText());
                RefreshTableCustomer(hasil);
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_txtCariKeyReleased

    private void btnShowBookingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowBookingActionPerformed
        // TODO add your handling code here:
        try {
            typeClient = "booking";
            ArrayList<String> hasil = (ArrayList<String>) portB.display();
            RefreshTableBooking(hasil);
            Refresh();
            Report();
        } catch (Exception e) {
            System.out.println("Error di button show Booking: " + e);
        }
    }//GEN-LAST:event_btnShowBookingActionPerformed

    private void btnShowRestaurantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowRestaurantActionPerformed
        // TODO add your handling code here:
        try {
            typeClient = "restaurant";
            ArrayList<String> hasil = (ArrayList<String>) portR.displayRes();

            RefreshTableRestaurant(hasil);
            Refresh();
            Report();
        } catch (Exception e) {
            System.out.println("Error di button show Restaurant: " + e);
        }
    }//GEN-LAST:event_btnShowRestaurantActionPerformed

    private void btnShowCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowCustomerActionPerformed
        // TODO add your handling code here:
        try {
            typeClient = "customer";
            ArrayList<String> hasil = (ArrayList<String>) portC.display();

            RefreshTableCustomer(hasil);
            Refresh();
            Report();
        } catch (Exception e) {
            System.out.println("Error di button show customer: " + e);
        }
    }//GEN-LAST:event_btnShowCustomerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainAdmin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnShowBooking;
    private javax.swing.JButton btnShowCustomer;
    private javax.swing.JButton btnShowRestaurant;
    private javax.swing.JComboBox<String> cbCari;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tableData;
    private javax.swing.JTextArea txtArea;
    private javax.swing.JTextField txtCari;
    // End of variables declaration//GEN-END:variables
}
